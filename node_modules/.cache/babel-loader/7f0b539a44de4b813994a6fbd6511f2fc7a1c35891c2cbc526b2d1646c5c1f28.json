{"ast":null,"code":"import { showNotification } from \"./uiSlice\";\nexport const fetchCartData = () => async dispatch => {\n  const fetchData = async () => {\n    const response = await fetch(\"https://redux-8ce34-default-rtdb.firebaseio.com/cart.json\");\n    if (!response.ok) {\n      throw new Error();\n    }\n    const data = await response;\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://redux-8ce34-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(showNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["showNotification","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","sendCartData","cart","status","title","message","sendRequest","method","body","JSON","stringify","error"],"sources":["C:/Users/S_e_T/OneDrive/Рабочий стол/Projects/advanced-redux/src/components/store/cartActions.js"],"sourcesContent":["import { showNotification } from \"./uiSlice\";\r\n\r\nexport const fetchCartData = () => async (dispatch) => {\r\n  const fetchData = async () => {\r\n    const response = await fetch(\r\n      \"https://redux-8ce34-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n      \r\n      if (!response.ok) {\r\n          throw new Error()\r\n      }\r\n\r\n      const data = await response\r\n  };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending...\",\r\n        message: \"Sending cart data!\",\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://redux-8ce34-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(cart),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Sending cart data failed!\");\r\n      }\r\n    };\r\n\r\n    try {\r\n      await sendRequest();\r\n\r\n      dispatch(\r\n        showNotification({\r\n          status: \"success\",\r\n          title: \"Success\",\r\n          message: \"Sent cart data successfully!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"Sending cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,WAAW;AAE5C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACrD,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2DACA,CAAC;IAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,CAAC;IACrB;IAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ;EAC/B,CAAC;AACH,CAAC;AAED,OAAO,MAAMK,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOR,QAAQ,IAAK;IACzBA,QAAQ,CACNF,gBAAgB,CAAC;MACfW,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2DAA2D,EAC3D;QACEU,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;MAC3B,CACF,CAAC;MAED,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC;IAED,IAAI;MACF,MAAMO,WAAW,CAAC,CAAC;MAEnBZ,QAAQ,CACNF,gBAAgB,CAAC;QACfW,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdjB,QAAQ,CACNF,gBAAgB,CAAC;QACfW,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}